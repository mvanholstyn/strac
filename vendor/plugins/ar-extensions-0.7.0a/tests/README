RUNNING THE TESTS
-----------------
To run the tests you can run rake tasks from the top level directory.
For more information on what tasks can be run, run "rake -T" from
the command line.

Currently the four available tasks are:
 - test:mysql
 - test:postgresql
 - test:sqlite
 - test:sqlite3
 - test:activerecord:mysql
 - test:activerecord:postgresql
 - test:activerecord:sqlite
 - test:activerecord:sqlite3

Task - test:<db_adapter>
-----------------
The test:<db_adapter> tasks runs the ActiveRecord::Extensions tests for
name of the <db_adapter>. Before you can run these you must create a database and load
it's schema using the ../config/<db_adapter>.schema file. 

Task - test:activerecord:<db_adapter> 
------------------------------
The test:activerecord:<db_adapter> takes one argument, the path to
activerecord.  For activerecord testing purposes this must be the
activerecord directory inside of a full rails download.

Example:   "rake test:activerecord:mysql /home/zdennis/rails-1.1.6/activerecord"

This runs the ActiveRecord tasks with the ActiveRecord::Extensions loaded.

Preparing Your Test Database
------------------------------
As of 0.2.0 ActiveRecord::Extensions allows you to use database migrations to prepare
your test database. The format of the task is:
  rake db:test:prepare_<db_adapter>

IE: rake db:test:prepare_mysql

This will force creation of all of the tables. This tasks relies on your connection to
be specified correctly in the tests/connections/native_<db_adapter>connection.rb 
file. 

As of 0.4.0 the test database contains schema information about
itself. If your test database is out of sync with the current version
of ActiveRecord::Extensions it will automatically prepare your
database for you. You should never have to explicitly use
"rake db:test:prepare_<db_adapter>".
